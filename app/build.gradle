plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def secretsFile = rootProject.file("secrets.properties")
def secrets = new Properties()

if (secretsFile.exists()) {
    secrets.load(new FileInputStream(secretsFile))
} else {
    // Provide defaults for development
    secrets.setProperty('openweather_api_key', '""')
    println "WARNING: secrets.properties not found. Using empty API key. Please create secrets.properties with your API keys."
}

android {
    namespace 'com.example.nepalweatherwidget'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.nepalweatherwidget"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"
        
        // API Configuration
        buildConfigField "String", "OPENWEATHER_API_KEY", "\"${secrets.getProperty('openweather_api_key', '')}\""
        buildConfigField "String", "OPENWEATHER_API_BASE_URL", "\"https://api.openweathermap.org/data/2.5/\""
        buildConfigField "String", "OPENWEATHER_ICON_BASE_URL", "\"https://openweathermap.org/img/wn/\""
        buildConfigField "String", "OPENWEATHER_ICON_SIZE", "\"@2x\""
        
        // App Configuration
        buildConfigField "String", "DEFAULT_LOCATION", "\"Kathmandu\""
        buildConfigField "int", "WEATHER_UPDATE_INTERVAL_MINUTES", "30"
        buildConfigField "int", "WIDGET_UPDATE_INTERVAL_MINUTES", "15"
        buildConfigField "int", "CACHE_DURATION_MINUTES", "60"
        buildConfigField "int", "MAX_RETRY_ATTEMPTS", "3"
        buildConfigField "int", "RETRY_DELAY_SECONDS", "5"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += [
            "-Xjvm-default=all",
            "-Xuse-k2"
        ]
    }
    buildFeatures {
        compose true
        viewBinding true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    def hilt_version = "2.48"
    def lifecycle_version = "2.6.2"
    def retrofit_version = "2.9.0"
    def okhttp_version = "4.11.0"
    def coroutines_version = "1.7.3"
    def room_version = "2.6.0"

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    
    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    
    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    
    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    
    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    
    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    
    // WorkManager
    implementation "androidx.work:work-runtime-ktx:2.9.0"
    implementation "androidx.hilt:hilt-work:1.1.0"
    kapt "androidx.hilt:hilt-compiler:1.1.0"
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

// Allow KAPT to access internal Java compiler classes
kapt {
    javacOptions {
        option("-Xmaxerrs", 500)
    }
    correctErrorTypes true
    useBuildCache true
}