plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.example.nepalweatherwidget'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.nepalweatherwidget"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        // App Configuration
        buildConfigField "String", "DEFAULT_LOCATION", "\"Kathmandu\""
        buildConfigField "int", "WEATHER_UPDATE_INTERVAL_MINUTES", "30"
        buildConfigField "int", "WIDGET_UPDATE_INTERVAL_MINUTES", "15"
        buildConfigField "int", "CACHE_DURATION_MINUTES", "60"
        buildConfigField "int", "MAX_RETRY_ATTEMPTS", "3"
        buildConfigField "int", "RETRY_DELAY_SECONDS", "5"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "OPENWEATHER_API_KEY", "\"${getApiKey()}\""
        }
        release {
            buildConfigField "String", "OPENWEATHER_API_KEY", "\"\""
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += [
            "-Xjvm-default=all"
        ]
    }

    buildFeatures {
        compose true
        buildConfig true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }

    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    // Add this to handle Kotlin/Java interop
    kapt {
        correctErrorTypes true
        useBuildCache true
        arguments {
            arg("dagger.fastInit", "enabled")
        }
    }
}

def getApiKey() {
    def props = new Properties()
    file("../local.properties").withInputStream { props.load(it) }
    return props.getProperty('OPENWEATHER_API_KEY', '')
}

dependencies {
    // Core Android dependencies
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.activity:activity-compose:1.8.2'

    // Material Design dependencies
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.compose.material:material:1.5.4'
    implementation 'androidx.compose.material3:material3:1.1.2'

    // Compose dependencies
    implementation platform('androidx.compose:compose-bom:2023.08.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'

    // Hilt dependencies
    implementation "com.google.dagger:hilt-android:2.48"
    kapt "com.google.dagger:hilt-android-compiler:2.48"
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0'

    // Retrofit dependencies
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'

    // Room dependencies
    implementation "androidx.room:room-runtime:2.6.1"
    kapt "androidx.room:room-compiler:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"

    // WorkManager dependencies
    implementation "androidx.work:work-runtime-ktx:2.9.0"
    implementation 'androidx.hilt:hilt-work:1.1.0'
    kapt 'androidx.hilt:hilt-compiler:1.1.0'

    // Security dependencies
    implementation "androidx.security:security-crypto:1.1.0-alpha06"
    implementation "androidx.security:security-crypto-ktx:1.1.0-alpha06"

    // Testing dependencies
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2023.08.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}